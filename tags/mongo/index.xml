<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>mongo on Nok</title>
    <link>https://nok3zy.github.io/tags/mongo/</link>
    <description>Recent content in mongo on Nok</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 13 Jun 2023 17:36:18 +0900</lastBuildDate><atom:link href="https://nok3zy.github.io/tags/mongo/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Mongo Custom Converter</title>
      <link>https://nok3zy.github.io/posts/mongo-custom-converter/</link>
      <pubDate>Tue, 13 Jun 2023 17:36:18 +0900</pubDate>
      
      <guid>https://nok3zy.github.io/posts/mongo-custom-converter/</guid>
      <description>Dynamic Creative 에서 상품 데이터를 Catalog로 만들면서, Document에 존재하는 국제화 데이터를 가공할 필요가 있었다. 상품의 Title이나 Description 등의 정보들이 있었고, 또한 해당 국가에서 접근이 가능한 상품인지 아닌지 등을 따져야하는 경우가 있었다.
여기서 생긴 문제는 필요한 데이터의 키값이 다르게 설정되어 있었다는 것이다.
Title { KR : &amp;#34;커피&amp;#34;, US : &amp;#34;Coffee&amp;#34;, JP : &amp;#34;コーヒー&amp;#34; } Description { ko : &amp;#34;안녕하세요&amp;#34;, en : &amp;#34;Hello&amp;#34;, ja : &amp;#34;こんにちは&amp;#34; } 이런 식으로 각 국가마다 노출해줄 데이터의 키값이 달랐다.</description>
    </item>
    
    <item>
      <title>Upload updated catalog every N hours</title>
      <link>https://nok3zy.github.io/posts/upload-updated-catalog-every-n-hours/</link>
      <pubDate>Fri, 26 May 2023 16:32:39 +0900</pubDate>
      
      <guid>https://nok3zy.github.io/posts/upload-updated-catalog-every-n-hours/</guid>
      <description>Dynamic Creative 프로젝트를 진행하면서, 업데이트가 되는 상품 정보를 모델에 적용시킬 수 있도록 해당 정보들을 올려달라는 요구사항을 받았다. 상품 정보는 업데이트가 정말 많이 일어나는 collection이었다. 그래서 번경이 일어나는 곳에서 이벤트를 감지해서 하기는 무리가 있었고 더군다나 여러 MSA에서 사용하고 있었기 때문에 더 말이 되지 않았다.
ChangeStream 🔗결국 선택한 방법은 Mongo의 ChangeStream을 이용하는 것이었다. 그리고 Spring MongoTemplate을 이용해서, 아래와 같이 ChangeStream에 접근할 수 있었다.
final MongoCollection&amp;lt;Document&amp;gt; collection = mongoTemplate.getCollection(COLLECTION_NAME); final ChangeStreamIterable&amp;lt;Document&amp;gt; changeStream = collection.</description>
    </item>
    
  </channel>
</rss>
